[
  {
    "objectID": "Kapsaskis_HW2.html",
    "href": "Kapsaskis_HW2.html",
    "title": "ST558 Homework 2 - Programming in Base R",
    "section": "",
    "text": "Suppose we have data from a medical experiment on blood pressure. We have the following pre-treatment values for subjects 1 through 20:\n• 130, 128, 116, 124, 133, 134, 118, 126, 114, 127, 141, 138, 128, 140, 137, 131, 120, 128, 139, 135\nafter treatment, the subjects were measured again (subjects 1 through 20 match)\n• 114, 98, 113, 99, 107, 116, 113, 111, 119, 117, 101, 119, 130, 122, 106, 106, 124, 102, 117, 113\n\nCreate two vectors. One vector corresponding to the pre measurements and one to the post measurements.\n\n\n#using the c() function to create a vector\npre_m &lt;- c(130, 128, 116, 124, 133, 134, 118, 126, 114, 127, 141, 138, 128, 140, 137, 131, 120, 128, 139, 135)\npost_m &lt;- c(114, 98, 113, 99, 107, 116, 113, 111, 119, 117, 101, 119, 130, 122, 106, 106, 124, 102, 117, 113)\n\n\nAssign names to the vector elements using the paste() function. Note that names() can be overwritten by a character vector. To quickly create the names, try running the code\n\n\npaste(\"Subject\", 1:20, sep = \"_\")\n\n [1] \"Subject_1\"  \"Subject_2\"  \"Subject_3\"  \"Subject_4\"  \"Subject_5\" \n [6] \"Subject_6\"  \"Subject_7\"  \"Subject_8\"  \"Subject_9\"  \"Subject_10\"\n[11] \"Subject_11\" \"Subject_12\" \"Subject_13\" \"Subject_14\" \"Subject_15\"\n[16] \"Subject_16\" \"Subject_17\" \"Subject_18\" \"Subject_19\" \"Subject_20\"\n\n# that looks like it created a vector containing the names that I want, so I am going to rename it 'subject_names'}\n\nsubject_names &lt;- paste(\"Subject\", 1:20, sep = \"_\")\n\n# now trying to assign the subject names to the values\n\nnames(pre_m) &lt;- subject_names\nnames(pre_m)\n\n [1] \"Subject_1\"  \"Subject_2\"  \"Subject_3\"  \"Subject_4\"  \"Subject_5\" \n [6] \"Subject_6\"  \"Subject_7\"  \"Subject_8\"  \"Subject_9\"  \"Subject_10\"\n[11] \"Subject_11\" \"Subject_12\" \"Subject_13\" \"Subject_14\" \"Subject_15\"\n[16] \"Subject_16\" \"Subject_17\" \"Subject_18\" \"Subject_19\" \"Subject_20\"\n\npre_m\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n       130        128        116        124        133        134        118 \n Subject_8  Subject_9 Subject_10 Subject_11 Subject_12 Subject_13 Subject_14 \n       126        114        127        141        138        128        140 \nSubject_15 Subject_16 Subject_17 Subject_18 Subject_19 Subject_20 \n       137        131        120        128        139        135 \n\nnames(post_m)\n\nNULL\n\nnames(post_m) &lt;- subject_names\nnames(post_m)\n\n [1] \"Subject_1\"  \"Subject_2\"  \"Subject_3\"  \"Subject_4\"  \"Subject_5\" \n [6] \"Subject_6\"  \"Subject_7\"  \"Subject_8\"  \"Subject_9\"  \"Subject_10\"\n[11] \"Subject_11\" \"Subject_12\" \"Subject_13\" \"Subject_14\" \"Subject_15\"\n[16] \"Subject_16\" \"Subject_17\" \"Subject_18\" \"Subject_19\" \"Subject_20\"\n\npost_m\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n       114         98        113         99        107        116        113 \n Subject_8  Subject_9 Subject_10 Subject_11 Subject_12 Subject_13 Subject_14 \n       111        119        117        101        119        130        122 \nSubject_15 Subject_16 Subject_17 Subject_18 Subject_19 Subject_20 \n       106        106        124        102        117        113 \n\n\nCreate the same names for each vector’s elements.\n\nCalculate the change in blood pressure for each patient by subtracting post-treatment measurements from pre-treatment measurements. Recall that R does math elementwise! Save this calculation as a new object in R (also a vector)\n\n\nbp_range &lt;- pre_m - post_m\nbp_range\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n        16         30          3         25         26         18          5 \n Subject_8  Subject_9 Subject_10 Subject_11 Subject_12 Subject_13 Subject_14 \n        15         -5         10         40         19         -2         18 \nSubject_15 Subject_16 Subject_17 Subject_18 Subject_19 Subject_20 \n        31         25         -4         26         22         22 \n\n\n\nCalculate the average decrease in blood pressure across all patients.\n\n\n# using the mean() function to calculate the average decrease\nmean(bp_range)\n\n[1] 17\n\n\n\nDetermine which patients experienced a decrease in blood pressure after treatment (a positive change). Use the which() function to just return the indices (and names) associated with this type of change.\n\n\ndecreased_bp &lt;- which(bp_range&lt;0)\ndecreased_bp\n\n Subject_9 Subject_13 Subject_17 \n         9         13         17 \n\n\n\nSubset the vector of differences to only return those that have a positive change.\n\n\npos_change &lt;- bp_range[-decreased_bp]\npos_change\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n        16         30          3         25         26         18          5 \n Subject_8 Subject_10 Subject_11 Subject_12 Subject_14 Subject_15 Subject_16 \n        15         10         40         19         18         31         25 \nSubject_18 Subject_19 Subject_20 \n        26         22         22 \n\n\n\nCalculate the average decrease in blood pressure for those where the blood pressure decreased (positive change).\n\n\nmean(pos_change)\n\n[1] 20.64706"
  },
  {
    "objectID": "Kapsaskis_HW2.html#task-1-basic-vector-practice",
    "href": "Kapsaskis_HW2.html#task-1-basic-vector-practice",
    "title": "ST558 Homework 2 - Programming in Base R",
    "section": "",
    "text": "Suppose we have data from a medical experiment on blood pressure. We have the following pre-treatment values for subjects 1 through 20:\n• 130, 128, 116, 124, 133, 134, 118, 126, 114, 127, 141, 138, 128, 140, 137, 131, 120, 128, 139, 135\nafter treatment, the subjects were measured again (subjects 1 through 20 match)\n• 114, 98, 113, 99, 107, 116, 113, 111, 119, 117, 101, 119, 130, 122, 106, 106, 124, 102, 117, 113\n\nCreate two vectors. One vector corresponding to the pre measurements and one to the post measurements.\n\n\n#using the c() function to create a vector\npre_m &lt;- c(130, 128, 116, 124, 133, 134, 118, 126, 114, 127, 141, 138, 128, 140, 137, 131, 120, 128, 139, 135)\npost_m &lt;- c(114, 98, 113, 99, 107, 116, 113, 111, 119, 117, 101, 119, 130, 122, 106, 106, 124, 102, 117, 113)\n\n\nAssign names to the vector elements using the paste() function. Note that names() can be overwritten by a character vector. To quickly create the names, try running the code\n\n\npaste(\"Subject\", 1:20, sep = \"_\")\n\n [1] \"Subject_1\"  \"Subject_2\"  \"Subject_3\"  \"Subject_4\"  \"Subject_5\" \n [6] \"Subject_6\"  \"Subject_7\"  \"Subject_8\"  \"Subject_9\"  \"Subject_10\"\n[11] \"Subject_11\" \"Subject_12\" \"Subject_13\" \"Subject_14\" \"Subject_15\"\n[16] \"Subject_16\" \"Subject_17\" \"Subject_18\" \"Subject_19\" \"Subject_20\"\n\n# that looks like it created a vector containing the names that I want, so I am going to rename it 'subject_names'}\n\nsubject_names &lt;- paste(\"Subject\", 1:20, sep = \"_\")\n\n# now trying to assign the subject names to the values\n\nnames(pre_m) &lt;- subject_names\nnames(pre_m)\n\n [1] \"Subject_1\"  \"Subject_2\"  \"Subject_3\"  \"Subject_4\"  \"Subject_5\" \n [6] \"Subject_6\"  \"Subject_7\"  \"Subject_8\"  \"Subject_9\"  \"Subject_10\"\n[11] \"Subject_11\" \"Subject_12\" \"Subject_13\" \"Subject_14\" \"Subject_15\"\n[16] \"Subject_16\" \"Subject_17\" \"Subject_18\" \"Subject_19\" \"Subject_20\"\n\npre_m\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n       130        128        116        124        133        134        118 \n Subject_8  Subject_9 Subject_10 Subject_11 Subject_12 Subject_13 Subject_14 \n       126        114        127        141        138        128        140 \nSubject_15 Subject_16 Subject_17 Subject_18 Subject_19 Subject_20 \n       137        131        120        128        139        135 \n\nnames(post_m)\n\nNULL\n\nnames(post_m) &lt;- subject_names\nnames(post_m)\n\n [1] \"Subject_1\"  \"Subject_2\"  \"Subject_3\"  \"Subject_4\"  \"Subject_5\" \n [6] \"Subject_6\"  \"Subject_7\"  \"Subject_8\"  \"Subject_9\"  \"Subject_10\"\n[11] \"Subject_11\" \"Subject_12\" \"Subject_13\" \"Subject_14\" \"Subject_15\"\n[16] \"Subject_16\" \"Subject_17\" \"Subject_18\" \"Subject_19\" \"Subject_20\"\n\npost_m\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n       114         98        113         99        107        116        113 \n Subject_8  Subject_9 Subject_10 Subject_11 Subject_12 Subject_13 Subject_14 \n       111        119        117        101        119        130        122 \nSubject_15 Subject_16 Subject_17 Subject_18 Subject_19 Subject_20 \n       106        106        124        102        117        113 \n\n\nCreate the same names for each vector’s elements.\n\nCalculate the change in blood pressure for each patient by subtracting post-treatment measurements from pre-treatment measurements. Recall that R does math elementwise! Save this calculation as a new object in R (also a vector)\n\n\nbp_range &lt;- pre_m - post_m\nbp_range\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n        16         30          3         25         26         18          5 \n Subject_8  Subject_9 Subject_10 Subject_11 Subject_12 Subject_13 Subject_14 \n        15         -5         10         40         19         -2         18 \nSubject_15 Subject_16 Subject_17 Subject_18 Subject_19 Subject_20 \n        31         25         -4         26         22         22 \n\n\n\nCalculate the average decrease in blood pressure across all patients.\n\n\n# using the mean() function to calculate the average decrease\nmean(bp_range)\n\n[1] 17\n\n\n\nDetermine which patients experienced a decrease in blood pressure after treatment (a positive change). Use the which() function to just return the indices (and names) associated with this type of change.\n\n\ndecreased_bp &lt;- which(bp_range&lt;0)\ndecreased_bp\n\n Subject_9 Subject_13 Subject_17 \n         9         13         17 \n\n\n\nSubset the vector of differences to only return those that have a positive change.\n\n\npos_change &lt;- bp_range[-decreased_bp]\npos_change\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n        16         30          3         25         26         18          5 \n Subject_8 Subject_10 Subject_11 Subject_12 Subject_14 Subject_15 Subject_16 \n        15         10         40         19         18         31         25 \nSubject_18 Subject_19 Subject_20 \n        26         22         22 \n\n\n\nCalculate the average decrease in blood pressure for those where the blood pressure decreased (positive change).\n\n\nmean(pos_change)\n\n[1] 20.64706"
  },
  {
    "objectID": "Kapsaskis_HW2.html#task-2-basic-data-frame-practice",
    "href": "Kapsaskis_HW2.html#task-2-basic-data-frame-practice",
    "title": "ST558 Homework 2 - Programming in Base R",
    "section": "Task 2: Basic Data Frame practice",
    "text": "Task 2: Basic Data Frame practice\nContinue the previous example.\n\nCreate a data frame object with four columns corresponding to your data above: patient, pre_bp, post_bp, and diff_bp\n\n\n# using the data.frame() function to make a data frame\n\nmy_df &lt;- data.frame(patient = subject_names, pre_bp = pre_m, post_bp = post_m, diff_pb = bp_range)\nmy_df\n\n              patient pre_bp post_bp diff_pb\nSubject_1   Subject_1    130     114      16\nSubject_2   Subject_2    128      98      30\nSubject_3   Subject_3    116     113       3\nSubject_4   Subject_4    124      99      25\nSubject_5   Subject_5    133     107      26\nSubject_6   Subject_6    134     116      18\nSubject_7   Subject_7    118     113       5\nSubject_8   Subject_8    126     111      15\nSubject_9   Subject_9    114     119      -5\nSubject_10 Subject_10    127     117      10\nSubject_11 Subject_11    141     101      40\nSubject_12 Subject_12    138     119      19\nSubject_13 Subject_13    128     130      -2\nSubject_14 Subject_14    140     122      18\nSubject_15 Subject_15    137     106      31\nSubject_16 Subject_16    131     106      25\nSubject_17 Subject_17    120     124      -4\nSubject_18 Subject_18    128     102      26\nSubject_19 Subject_19    139     117      22\nSubject_20 Subject_20    135     113      22\n\n\n\nReturn only rows where the diff_bp column is negative. (Use [ or learn about the subset() function if you’d like. If you use [, don’t reference the original vector from the first part, access the column of the data frame when looking at making a comparison.)\n\n\nmy_df[my_df$diff_pb&lt;0,]\n\n              patient pre_bp post_bp diff_pb\nSubject_9   Subject_9    114     119      -5\nSubject_13 Subject_13    128     130      -2\nSubject_17 Subject_17    120     124      -4\n\n\n\nAdd a new column to the data frame corresponding to TRUE if the post_bp is less than 120. Recall you can use $ to access a column. If you reference a column that doesn’t exist, and save a vector (of appropriate length in it), that vector becomes a column of your data frame! Similar to the previous question, don’t reference the original vector from the first part, access the column of the data frame when looking at making a comparison.\n\n\nmy_df$low_post_bp=ifelse(my_df$post_bp&lt;120,TRUE,FALSE)\nmy_df\n\n              patient pre_bp post_bp diff_pb low_post_bp\nSubject_1   Subject_1    130     114      16        TRUE\nSubject_2   Subject_2    128      98      30        TRUE\nSubject_3   Subject_3    116     113       3        TRUE\nSubject_4   Subject_4    124      99      25        TRUE\nSubject_5   Subject_5    133     107      26        TRUE\nSubject_6   Subject_6    134     116      18        TRUE\nSubject_7   Subject_7    118     113       5        TRUE\nSubject_8   Subject_8    126     111      15        TRUE\nSubject_9   Subject_9    114     119      -5        TRUE\nSubject_10 Subject_10    127     117      10        TRUE\nSubject_11 Subject_11    141     101      40        TRUE\nSubject_12 Subject_12    138     119      19        TRUE\nSubject_13 Subject_13    128     130      -2       FALSE\nSubject_14 Subject_14    140     122      18       FALSE\nSubject_15 Subject_15    137     106      31        TRUE\nSubject_16 Subject_16    131     106      25        TRUE\nSubject_17 Subject_17    120     124      -4       FALSE\nSubject_18 Subject_18    128     102      26        TRUE\nSubject_19 Subject_19    139     117      22        TRUE\nSubject_20 Subject_20    135     113      22        TRUE\n\n\n\nFinally, print the data frame out nicely in your final document by modifying the code below appropriately.\n\n\nknitr::kable(my_df)\n\n\n\n\n\npatient\npre_bp\npost_bp\ndiff_pb\nlow_post_bp\n\n\n\n\nSubject_1\nSubject_1\n130\n114\n16\nTRUE\n\n\nSubject_2\nSubject_2\n128\n98\n30\nTRUE\n\n\nSubject_3\nSubject_3\n116\n113\n3\nTRUE\n\n\nSubject_4\nSubject_4\n124\n99\n25\nTRUE\n\n\nSubject_5\nSubject_5\n133\n107\n26\nTRUE\n\n\nSubject_6\nSubject_6\n134\n116\n18\nTRUE\n\n\nSubject_7\nSubject_7\n118\n113\n5\nTRUE\n\n\nSubject_8\nSubject_8\n126\n111\n15\nTRUE\n\n\nSubject_9\nSubject_9\n114\n119\n-5\nTRUE\n\n\nSubject_10\nSubject_10\n127\n117\n10\nTRUE\n\n\nSubject_11\nSubject_11\n141\n101\n40\nTRUE\n\n\nSubject_12\nSubject_12\n138\n119\n19\nTRUE\n\n\nSubject_13\nSubject_13\n128\n130\n-2\nFALSE\n\n\nSubject_14\nSubject_14\n140\n122\n18\nFALSE\n\n\nSubject_15\nSubject_15\n137\n106\n31\nTRUE\n\n\nSubject_16\nSubject_16\n131\n106\n25\nTRUE\n\n\nSubject_17\nSubject_17\n120\n124\n-4\nFALSE\n\n\nSubject_18\nSubject_18\n128\n102\n26\nTRUE\n\n\nSubject_19\nSubject_19\n139\n117\n22\nTRUE\n\n\nSubject_20\nSubject_20\n135\n113\n22\nTRUE"
  },
  {
    "objectID": "Kapsaskis_HW2.html#task-3-list-practice",
    "href": "Kapsaskis_HW2.html#task-3-list-practice",
    "title": "ST558 Homework 2 - Programming in Base R",
    "section": "Task 3: List practice",
    "text": "Task 3: List practice\nContinue the previous example. Suppose we now also have data from another experiment where the ‘treatment’ was actually a placebo.\nWe have the following pre-treatment values for subjects 1 through 10 (different set of subjects):\n• 138, 135, 147, 117, 152, 134, 114, 121, 131, 130\nafter treatment, the subjects were measured again (subjects 1 through 10 match)\n• 105, 136, 123, 130, 134, 143, 135, 139, 120, 124\n\nCreate a new data frame with this data in it that is similar to the data frame from task 2 (including the new column).\n\n\nplacebo_pre_m &lt;- c(138, 135, 147, 117, 152, 134, 114, 121, 131, 130)\nplacebo_post_m &lt;- c(105, 136, 123, 130, 134, 143, 135, 139, 120, 124)\n\n\nplacebo_subject_names &lt;- paste(\"Subject\", 1:10, sep = \"_\")\n\n# now trying to assign the subject names to the values\n\nnames(placebo_pre_m) &lt;- placebo_subject_names\nnames(placebo_pre_m)\n\n [1] \"Subject_1\"  \"Subject_2\"  \"Subject_3\"  \"Subject_4\"  \"Subject_5\" \n [6] \"Subject_6\"  \"Subject_7\"  \"Subject_8\"  \"Subject_9\"  \"Subject_10\"\n\nplacebo_pre_m\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n       138        135        147        117        152        134        114 \n Subject_8  Subject_9 Subject_10 \n       121        131        130 \n\nnames(placebo_post_m) &lt;- placebo_subject_names\nnames(placebo_post_m)\n\n [1] \"Subject_1\"  \"Subject_2\"  \"Subject_3\"  \"Subject_4\"  \"Subject_5\" \n [6] \"Subject_6\"  \"Subject_7\"  \"Subject_8\"  \"Subject_9\"  \"Subject_10\"\n\nplacebo_post_m\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n       105        136        123        130        134        143        135 \n Subject_8  Subject_9 Subject_10 \n       139        120        124 \n\n\n\nplacebo_bp_range &lt;- placebo_pre_m - placebo_post_m\nplacebo_bp_range\n\n Subject_1  Subject_2  Subject_3  Subject_4  Subject_5  Subject_6  Subject_7 \n        33         -1         24        -13         18         -9        -21 \n Subject_8  Subject_9 Subject_10 \n       -18         11          6 \n\n\n\nmy_placebo_df &lt;- data.frame(patient = placebo_subject_names, pre_bp = placebo_pre_m, post_bp = placebo_post_m, diff_pb = placebo_bp_range)\nmy_placebo_df\n\n              patient pre_bp post_bp diff_pb\nSubject_1   Subject_1    138     105      33\nSubject_2   Subject_2    135     136      -1\nSubject_3   Subject_3    147     123      24\nSubject_4   Subject_4    117     130     -13\nSubject_5   Subject_5    152     134      18\nSubject_6   Subject_6    134     143      -9\nSubject_7   Subject_7    114     135     -21\nSubject_8   Subject_8    121     139     -18\nSubject_9   Subject_9    131     120      11\nSubject_10 Subject_10    130     124       6\n\n\n\nmy_placebo_df$low_post_bp=ifelse(my_placebo_df$post_bp&lt;120,TRUE,FALSE)\nmy_placebo_df\n\n              patient pre_bp post_bp diff_pb low_post_bp\nSubject_1   Subject_1    138     105      33        TRUE\nSubject_2   Subject_2    135     136      -1       FALSE\nSubject_3   Subject_3    147     123      24       FALSE\nSubject_4   Subject_4    117     130     -13       FALSE\nSubject_5   Subject_5    152     134      18       FALSE\nSubject_6   Subject_6    134     143      -9       FALSE\nSubject_7   Subject_7    114     135     -21       FALSE\nSubject_8   Subject_8    121     139     -18       FALSE\nSubject_9   Subject_9    131     120      11       FALSE\nSubject_10 Subject_10    130     124       6       FALSE\n\n\n\nNow create and store a list with two elements:\n\n• 1st element named treatment and contains the first data frame you created.\n• 2nd element named placebo and contains the second data frame you created.\n\nmy_list &lt;- list(treatment=my_df, placebo=my_placebo_df)\n\n\nAccess the first list element using three different types of syntax.\n\n\nmy_list[[1]]\n\n              patient pre_bp post_bp diff_pb low_post_bp\nSubject_1   Subject_1    130     114      16        TRUE\nSubject_2   Subject_2    128      98      30        TRUE\nSubject_3   Subject_3    116     113       3        TRUE\nSubject_4   Subject_4    124      99      25        TRUE\nSubject_5   Subject_5    133     107      26        TRUE\nSubject_6   Subject_6    134     116      18        TRUE\nSubject_7   Subject_7    118     113       5        TRUE\nSubject_8   Subject_8    126     111      15        TRUE\nSubject_9   Subject_9    114     119      -5        TRUE\nSubject_10 Subject_10    127     117      10        TRUE\nSubject_11 Subject_11    141     101      40        TRUE\nSubject_12 Subject_12    138     119      19        TRUE\nSubject_13 Subject_13    128     130      -2       FALSE\nSubject_14 Subject_14    140     122      18       FALSE\nSubject_15 Subject_15    137     106      31        TRUE\nSubject_16 Subject_16    131     106      25        TRUE\nSubject_17 Subject_17    120     124      -4       FALSE\nSubject_18 Subject_18    128     102      26        TRUE\nSubject_19 Subject_19    139     117      22        TRUE\nSubject_20 Subject_20    135     113      22        TRUE\n\n\n\nmy_list$treatment\n\n              patient pre_bp post_bp diff_pb low_post_bp\nSubject_1   Subject_1    130     114      16        TRUE\nSubject_2   Subject_2    128      98      30        TRUE\nSubject_3   Subject_3    116     113       3        TRUE\nSubject_4   Subject_4    124      99      25        TRUE\nSubject_5   Subject_5    133     107      26        TRUE\nSubject_6   Subject_6    134     116      18        TRUE\nSubject_7   Subject_7    118     113       5        TRUE\nSubject_8   Subject_8    126     111      15        TRUE\nSubject_9   Subject_9    114     119      -5        TRUE\nSubject_10 Subject_10    127     117      10        TRUE\nSubject_11 Subject_11    141     101      40        TRUE\nSubject_12 Subject_12    138     119      19        TRUE\nSubject_13 Subject_13    128     130      -2       FALSE\nSubject_14 Subject_14    140     122      18       FALSE\nSubject_15 Subject_15    137     106      31        TRUE\nSubject_16 Subject_16    131     106      25        TRUE\nSubject_17 Subject_17    120     124      -4       FALSE\nSubject_18 Subject_18    128     102      26        TRUE\nSubject_19 Subject_19    139     117      22        TRUE\nSubject_20 Subject_20    135     113      22        TRUE\n\n\n\nmy_list[1][1]\n\n$treatment\n              patient pre_bp post_bp diff_pb low_post_bp\nSubject_1   Subject_1    130     114      16        TRUE\nSubject_2   Subject_2    128      98      30        TRUE\nSubject_3   Subject_3    116     113       3        TRUE\nSubject_4   Subject_4    124      99      25        TRUE\nSubject_5   Subject_5    133     107      26        TRUE\nSubject_6   Subject_6    134     116      18        TRUE\nSubject_7   Subject_7    118     113       5        TRUE\nSubject_8   Subject_8    126     111      15        TRUE\nSubject_9   Subject_9    114     119      -5        TRUE\nSubject_10 Subject_10    127     117      10        TRUE\nSubject_11 Subject_11    141     101      40        TRUE\nSubject_12 Subject_12    138     119      19        TRUE\nSubject_13 Subject_13    128     130      -2       FALSE\nSubject_14 Subject_14    140     122      18       FALSE\nSubject_15 Subject_15    137     106      31        TRUE\nSubject_16 Subject_16    131     106      25        TRUE\nSubject_17 Subject_17    120     124      -4       FALSE\nSubject_18 Subject_18    128     102      26        TRUE\nSubject_19 Subject_19    139     117      22        TRUE\nSubject_20 Subject_20    135     113      22        TRUE\n\n\n\nIn one line, access the placebo data frame, pre_bp column.\n\n\nmy_list$placebo$pre_bp\n\n [1] 138 135 147 117 152 134 114 121 131 130"
  },
  {
    "objectID": "Kapsaskis_HW2.html#task-4-control-flow-practice",
    "href": "Kapsaskis_HW2.html#task-4-control-flow-practice",
    "title": "ST558 Homework 2 - Programming in Base R",
    "section": "Task 4: Control Flow Practice",
    "text": "Task 4: Control Flow Practice\nContinue the previous example.\n\nSuppose we want to characterize the post-treatment (or placebo) blood pressure measurement as optimal (≤ 120), borderline (120 &lt; bp ≤ 130), and high (&gt; 130). First, create a new column in each data frame from above called status. You can do this via\n\n\n# your_df$status &lt;- character(20) #or 10 depending on number of observations\n\nNote: You want to do this additional column to the data frames that are stored in your list (R doesn’t do referencing to the original object).\n\nmy_list$treatment$status &lt;- character(20)\nmy_list$placebo$status &lt;- character(10)\n\n\nFor the non-placebo data frame (within the list), create a for loop and use if/then/else logic to create the status column’s values.\n\n\n# for loop for treatment df status\n\nfor (i in 1:20) {\n  if(my_list$treatment$post_bp[i] &lt;= 120) { \n    my_list$treatment$status[i]=\"optimal\"\n  } else if (my_list$treatment$post_bp[i] &gt; 120 & my_list$treatment$post_bp[i] &lt;= 130) {\n    my_list$treatment$status[i]=\"borderline\"\n  } else if (my_list$treatment$post_bp[i] &gt; 130) {\n    my_list$treatment$status[i]=\"high\"\n  } else {\n    my_list$treatment$status[i]=\"Error\"\n  }\n}\n\n\nRepeat for the placebo data frame (within the list).\n\n\n# for loop for placebo df status\n\nfor (i in 1:10) {\n  if(my_list$placebo$post_bp[i] &lt;= 120) { \n    my_list$placebo$status[i]=\"optimal\"\n  } else if (my_list$placebo$post_bp[i] &gt; 120 & my_list$placebo$post_bp[i] &lt;= 130) {\n    my_list$placebo$status[i]=\"borderline\"\n  } else if (my_list$placebo$post_bp[i] &gt; 130) {\n    my_list$placebo$status[i]=\"high\"\n  } else {\n    my_list$placebo$status[i]=\"Error\"\n  }\n}"
  },
  {
    "objectID": "Kapsaskis_HW2.html#task-5-function-writing",
    "href": "Kapsaskis_HW2.html#task-5-function-writing",
    "title": "ST558 Homework 2 - Programming in Base R",
    "section": "Task 5: Function Writing",
    "text": "Task 5: Function Writing\nContinue the previous example. Suppose you would eventually have many datasets in the form of the two above. You want to write a function to do some things for you quickly.\n\nWrite a function that\n\n• takes in a list with two data frames in it (a treatment and a placebo data frame) as an argument. Give no default value.\n• takes in an R function (that would find a summary of a numeric column) with the default value being set to \"mean\" (notice this is a quoted string).\n• Finds the statistic of interest (as defined by the user input) for the pre, post, and diff columns of both data frames.\n– Use my_fun &lt;- get(stat) within the function to get the function from the quoted string.\n• These six values should then be returned as a named list with meaningful names - this is a somewhat challenging part!\n– I’m going to let you consider what to do but you might create a vector of names that is created dynamically based on the statistic passed, create a vector with the actual statistic values, and then assign names() to your vector. Then return that (an atomic vector with names can be returned instead of a list).\n\nmy_function &lt;- function(list_of_df, stat=\"mean\") {\n  \n  \n  # create the column list with all the columns you want to get summary stats from\n  column_of_interest_list &lt;- list(list_of_df[[1]]$pre, list_of_df[[1]]$post, list_of_df[[1]]$diff, list_of_df[[2]]$pre, list_of_df[[2]]$post, list_of_df[[2]]$diff)\n  \n  # name the function for your summary stat\n  my_stat &lt;- get(stat)\n  \n  stat_list &lt;- lapply(column_of_interest_list,my_stat)\n  \n  # create a vector of meaningful names\n  \n  meaningful_names &lt;- c(\"Pre-Treatment BP (Treatment Group)\", \"Post-Treatment BP (Treatment Group)\", \"Difference in BP (Treatment Group)\", \"Pre-Treatment BP (Placebo Group)\", \"Post-Treatment BP (Placebo Group)\", \"Difference in BP (Placebo Group)\")\n  \n  # add stat name\n  \n  meaningful_names_w_stat=paste(meaningful_names,stat)\n  \n  # apply the meaningful names to the stat list\n  \n  names(stat_list) &lt;- meaningful_names_w_stat\n  \n  return(stat_list)\n}\n\n• Finally, apply your function to you list of data frames from previous. Use it without specifying your statistic, with specifying your statistic as \"var\", \"sd\", \"min\", and \"max\".\n\n# mean\nmy_function(my_list)\n\n$`Pre-Treatment BP (Treatment Group) mean`\n[1] 129.35\n\n$`Post-Treatment BP (Treatment Group) mean`\n[1] 112.35\n\n$`Difference in BP (Treatment Group) mean`\n[1] 17\n\n$`Pre-Treatment BP (Placebo Group) mean`\n[1] 131.9\n\n$`Post-Treatment BP (Placebo Group) mean`\n[1] 128.9\n\n$`Difference in BP (Placebo Group) mean`\n[1] 3\n\n# var\nmy_function(my_list,\"var\")\n\n$`Pre-Treatment BP (Treatment Group) var`\n[1] 64.55526\n\n$`Post-Treatment BP (Treatment Group) var`\n[1] 74.76579\n\n$`Difference in BP (Treatment Group) var`\n[1] 153.6842\n\n$`Pre-Treatment BP (Placebo Group) var`\n[1] 149.8778\n\n$`Post-Treatment BP (Placebo Group) var`\n[1] 124.9889\n\n$`Difference in BP (Placebo Group) var`\n[1] 341.3333\n\n# sd\nmy_function(my_list,\"sd\")\n\n$`Pre-Treatment BP (Treatment Group) sd`\n[1] 8.034629\n\n$`Post-Treatment BP (Treatment Group) sd`\n[1] 8.646721\n\n$`Difference in BP (Treatment Group) sd`\n[1] 12.39694\n\n$`Pre-Treatment BP (Placebo Group) sd`\n[1] 12.24246\n\n$`Post-Treatment BP (Placebo Group) sd`\n[1] 11.17984\n\n$`Difference in BP (Placebo Group) sd`\n[1] 18.47521\n\n# min\nmy_function(my_list,\"min\")\n\n$`Pre-Treatment BP (Treatment Group) min`\n[1] 114\n\n$`Post-Treatment BP (Treatment Group) min`\n[1] 98\n\n$`Difference in BP (Treatment Group) min`\n[1] -5\n\n$`Pre-Treatment BP (Placebo Group) min`\n[1] 114\n\n$`Post-Treatment BP (Placebo Group) min`\n[1] 105\n\n$`Difference in BP (Placebo Group) min`\n[1] -21\n\n# max\nmy_function(my_list,\"max\")\n\n$`Pre-Treatment BP (Treatment Group) max`\n[1] 141\n\n$`Post-Treatment BP (Treatment Group) max`\n[1] 130\n\n$`Difference in BP (Treatment Group) max`\n[1] 40\n\n$`Pre-Treatment BP (Placebo Group) max`\n[1] 152\n\n$`Post-Treatment BP (Placebo Group) max`\n[1] 143\n\n$`Difference in BP (Placebo Group) max`\n[1] 33"
  }
]